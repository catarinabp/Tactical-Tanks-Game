Index: src/main/java/org/example/controller/menu/MenuController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.controller.menu;\n\nimport org.example.GUI.GUI;\nimport org.example.Game;\nimport org.example.controller.Controller;\nimport org.example.model.game.map.LoaderMapBuilder;\nimport org.example.model.menu.Menu;\nimport org.example.states.GameState;\n\nimport java.io.IOException;\n\npublic class MenuController extends Controller<Menu> {\n    public MenuController(Menu menu) {\n        super(menu);\n    }\n\n    @Override\n    public void step(Game game, GUI.ACTION action, long time) throws IOException {\n        switch (action) {\n            case UP:\n                getModel().previousEntry();\n                break;\n            case DOWN:\n                getModel().nextEntry();\n                break;\n            case SELECT:\n                if (getModel().isSelectedExit()) game.setState(null);\n                if (getModel().isSelectedInstr()) game.setState(new GameState(new LoaderMapBuilder(1).createMap()));\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/menu/MenuController.java b/src/main/java/org/example/controller/menu/MenuController.java
--- a/src/main/java/org/example/controller/menu/MenuController.java	(revision 9b8804f7227f75c622883696cb0cd6a2b9c867c2)
+++ b/src/main/java/org/example/controller/menu/MenuController.java	(date 1702602413012)
@@ -25,7 +25,7 @@
                 break;
             case SELECT:
                 if (getModel().isSelectedExit()) game.setState(null);
-                if (getModel().isSelectedInstr()) game.setState(new GameState(new LoaderMapBuilder(1).createMap()));
+                if (getModel().isSelectedStart()) game.setState(new GameState(new LoaderMapBuilder(1).createMap()));
         }
     }
 }
Index: src/main/java/org/example/controller/game/MapController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.controller.game;\n\nimport org.example.GUI.GUI;\nimport org.example.GUI.LanternaGUI;\nimport org.example.Game;\nimport org.example.model.game.map.Map;\nimport org.example.model.menu.Menu;\nimport org.example.states.MenuState;\n\nimport java.io.IOException;\n\nimport static java.time.zone.ZoneRulesProvider.refresh;\n\npublic class MapController extends GameController {\n    private final ShootController shootController;\n    private final PlayerTankController playerTankController;\n    private final NPCController npcController;\n\n\n    public MapController(Map map) {\n        super(map);\n\n        this.playerTankController = new PlayerTankController(map);\n        this.npcController = new NPCController(map);\n        this.shootController = new ShootController(map);\n    }\n\n    public void step(Game game, GUI.ACTION action, long time) throws IOException {\n        if (action == GUI.ACTION.QUIT || getModel().getPlayerTank().getLife() == 0 || getModel().isHole(getModel().getPlayerTank().getPosition()) ) {\n            game.setState(new MenuState(new Menu()));\n        }\n        else {\n            playerTankController.step(game, action, time);\n            npcController.step(game, action, time);\n            shootController.step(game, action, time);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/game/MapController.java b/src/main/java/org/example/controller/game/MapController.java
--- a/src/main/java/org/example/controller/game/MapController.java	(revision 9b8804f7227f75c622883696cb0cd6a2b9c867c2)
+++ b/src/main/java/org/example/controller/game/MapController.java	(date 1702602413021)
@@ -26,7 +26,7 @@
     }
 
     public void step(Game game, GUI.ACTION action, long time) throws IOException {
-        if (action == GUI.ACTION.QUIT || getModel().getPlayerTank().getLife() == 0 || getModel().isHole(getModel().getPlayerTank().getPosition()) ) {
+        if (action == GUI.ACTION.QUIT || getModel().getPlayerTank().getLife() == 0 || getModel().isHole(getModel().getPlayerTank().getPosition()) || getModel().getNPCs().isEmpty()) {
             game.setState(new MenuState(new Menu()));
         }
         else {
Index: src/main/java/org/example/states/GameState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.states;\n\nimport org.example.controller.Controller;\nimport org.example.controller.game.MapController;\nimport org.example.model.game.map.Map;\nimport org.example.viewer.Viewer;\nimport org.example.viewer.game.GameViewer;\n\npublic class GameState extends State<Map> {\n    private static long startTime;\n    private static long elapsedTime;\n\n    public GameState(Map map) {\n        super(map);\n        startTime = System.nanoTime();\n        elapsedTime = 0;\n    }\n\n    public static long update() {\n        // Calculate the elapsed time\n        long currentTime = System.nanoTime();\n        elapsedTime = currentTime - startTime;\n        return elapsedTime;\n    }\n\n    public static long displayElapsedTime() {\n        long seconds = update() / 1_000_000_000; // Convert nanoseconds to seconds\n        return seconds;\n    }\n\n    @Override\n    protected Viewer<Map> getViewer() {\n        return new GameViewer(getModel());\n    }\n\n    @Override\n    protected Controller<Map> getController() {\n        return new MapController(getModel());\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/states/GameState.java b/src/main/java/org/example/states/GameState.java
--- a/src/main/java/org/example/states/GameState.java	(revision 9b8804f7227f75c622883696cb0cd6a2b9c867c2)
+++ b/src/main/java/org/example/states/GameState.java	(date 1702603073908)
@@ -1,5 +1,7 @@
 package org.example.states;
 
+import org.example.GUI.GUI;
+import org.example.Game;
 import org.example.controller.Controller;
 import org.example.controller.game.MapController;
 import org.example.model.game.map.Map;
@@ -37,4 +39,14 @@
     protected Controller<Map> getController() {
         return new MapController(getModel());
     }
+
+    @Override
+    public void update(Game game, GUI.ACTION action, long time) throws IOException {
+        if (getModel().getNPCs().isEmpty()) {
+            game.setState(new GameOverState("YOU WIN!"));
+        } else if (getModel().getPlayerTank().getLife() == 0 || getModel().isHole(getModel().getPlayerTank().getPosition())) {
+            game.setState(new GameOverState("GAME OVER!"));
+        }
+    }
+
 }
Index: src/main/java/org/example/model/menu/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.model.menu;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Menu {\n    private final List<String> entries;\n    private int currentEntry = 0;\n\n    public Menu() {\n        this.entries = Arrays.asList(\"    Start\", \"    Exit\");\n    }\n\n    public void nextEntry() {\n        currentEntry++;\n        if (currentEntry > this.entries.size() - 1)\n            currentEntry = 0;\n    }\n\n    public void previousEntry() {\n        currentEntry--;\n        if (currentEntry < 0)\n            currentEntry = this.entries.size() - 1;\n    }\n\n    public String getEntry(int i) {\n        return entries.get(i);\n    }\n\n    public boolean isSelected(int i) {\n        return currentEntry == i;\n    }\n\n    public boolean isSelectedExit() {\n        return isSelected(1);\n    }\n\n    public boolean isSelectedInstr() {\n        return isSelected(0);\n    }\n\n    public boolean isSelectedStart() {\n        return isSelected(0);\n    }\n\n\n    public int getNumberEntries() {\n        return this.entries.size();\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/model/menu/Menu.java b/src/main/java/org/example/model/menu/Menu.java
--- a/src/main/java/org/example/model/menu/Menu.java	(revision 9b8804f7227f75c622883696cb0cd6a2b9c867c2)
+++ b/src/main/java/org/example/model/menu/Menu.java	(date 1702601393786)
@@ -8,7 +8,7 @@
     private int currentEntry = 0;
 
     public Menu() {
-        this.entries = Arrays.asList("    Start", "    Exit");
+        this.entries = Arrays.asList("    Start", "    Instructions", "    Records", "    Exit");
     }
 
     public void nextEntry() {
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\n    <file type=\"web\" url=\"file://$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" project-jdk-name=\"corretto-17\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 9b8804f7227f75c622883696cb0cd6a2b9c867c2)
+++ b/.idea/misc.xml	(date 1702604088030)
@@ -4,7 +4,7 @@
   <component name="FrameworkDetectionExcludesConfiguration">
     <file type="web" url="file://$PROJECT_DIR$" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/org/example/controller/menu/GameOverController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/controller/menu/GameOverController.java b/src/main/java/org/example/controller/menu/GameOverController.java
new file mode 100644
--- /dev/null	(date 1702603486675)
+++ b/src/main/java/org/example/controller/menu/GameOverController.java	(date 1702603486675)
@@ -0,0 +1,18 @@
+package org.example.controller.menu;
+
+import org.example.GUI.GUI;
+import org.example.Game;
+import org.example.controller.Controller;
+
+import java.io.IOException;
+
+public class GameOverController extends Controller<String> {
+    public GameOverController(String model) {
+        super(model);
+    }
+
+    @Override
+    public void step(Game game, GUI.ACTION action, long time) throws IOException {
+        // Lógica para processar ação na tela de Game Over (se necessário)
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"1b280471-3136-4f10-81c7-f11666ec67df\" name=\"Changes\" comment=\"add new functionalities\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/model/game/map/Map.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/model/game/map/Map.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CodeStyleSettingsInfer\">\n    <option name=\"done\" value=\"true\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"ExternalProjectsManager\">\n    <system id=\"GRADLE\">\n      <state>\n        <task path=\"$PROJECT_DIR$\">\n          <activation />\n        </task>\n        <projects_view>\n          <tree_state>\n            <expand />\n            <select />\n          </tree_state>\n        </projects_view>\n      </state>\n    </system>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"controller\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectCodeStyleSettingsMigration\">\n    <option name=\"version\" value=\"2\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 1\n}</component>\n  <component name=\"ProjectId\" id=\"2YglTvy5EPu4FHBAnFe2OfwO2D2\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/afons/Downloads/project-l14gr06&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;onboarding.tips.debug.path&quot;: &quot;/Users/marianamelo/IdeaProjects/ldts/tactical-tanks1/src/main/java/org/example/Main.java&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/test/java\" />\n      <recent name=\"$PROJECT_DIR$/src/main/java/org/example/model/game\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"1b280471-3136-4f10-81c7-f11666ec67df\" name=\"Changes\" comment=\"\" />\n      <created>1700955114985</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1700955114985</updated>\n      <workItem from=\"1700955116340\" duration=\"389000\" />\n      <workItem from=\"1700956259786\" duration=\"246000\" />\n      <workItem from=\"1700956659501\" duration=\"309000\" />\n      <workItem from=\"1700957005047\" duration=\"4565000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"add new functionalities\">\n      <created>1701708815903</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1701708815903</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"add new functionalities\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add new functionalities\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/main/java/org/example/controller/Controller.java</url>\n          <line>53</line>\n          <option name=\"timeStamp\" value=\"2\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9b8804f7227f75c622883696cb0cd6a2b9c867c2)
+++ b/.idea/workspace.xml	(date 1702604088025)
@@ -5,8 +5,14 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="1b280471-3136-4f10-81c7-f11666ec67df" name="Changes" comment="add new functionalities">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/game/map/Map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/game/map/Map.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/menu/GameOverController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/states/GameOverState.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/viewer/menu/GameOverViewer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/game/MapController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/game/MapController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/controller/menu/MenuController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/controller/menu/MenuController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/model/menu/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/model/menu/Menu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/states/GameState.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/states/GameState.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -47,7 +53,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="controller" />
+        <entry key="$PROJECT_DIR$" value="main" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -67,32 +73,52 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/afons/Downloads/project-l14gr06&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;onboarding.tips.debug.path&quot;: &quot;/Users/marianamelo/IdeaProjects/ldts/tactical-tanks1/src/main/java/org/example/Main.java&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "shoot",
+    "last_opened_file_path": "C:/Users/afons/Downloads/project-l14gr06",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "onboarding.tips.debug.path": "/Users/marianamelo/IdeaProjects/ldts/tactical-tanks1/src/main/java/org/example/Main.java",
+    "project.structure.last.edited": "Project",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0",
+    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/src/test/java" />
       <recent name="$PROJECT_DIR$/src/main/java/org/example/model/game" />
     </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="Game" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="org.example.Game" />
+      <module name="tactical-tanks1.main" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="org.example.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Game" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
Index: src/main/java/org/example/states/GameOverState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/states/GameOverState.java b/src/main/java/org/example/states/GameOverState.java
new file mode 100644
--- /dev/null	(date 1702603194840)
+++ b/src/main/java/org/example/states/GameOverState.java	(date 1702603194840)
@@ -0,0 +1,23 @@
+package org.example.states;
+
+import org.example.controller.Controller;
+import org.example.states.State;
+import org.example.viewer.Viewer;
+import org.example.viewer.menu.GameOverViewer;
+
+public class GameOverState extends State<String> {
+    public GameOverState(String model) {
+        super(model);
+    }
+
+    @Override
+    protected Viewer<String> getViewer() {
+        return new GameOverViewer(getModel());
+    }
+
+    @Override
+    protected Controller<String> getController() {
+        return new GameOverController(getModel());
+    }
+}
+
Index: src/main/java/org/example/viewer/menu/GameOverViewer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/viewer/menu/GameOverViewer.java b/src/main/java/org/example/viewer/menu/GameOverViewer.java
new file mode 100644
--- /dev/null	(date 1702603194821)
+++ b/src/main/java/org/example/viewer/menu/GameOverViewer.java	(date 1702603194821)
@@ -0,0 +1,16 @@
+package org.example.viewer.menu;
+
+import org.example.GUI.GUI;
+import org.example.model.Position;
+import org.example.viewer.Viewer;
+
+public class GameOverViewer extends Viewer<String> {
+    public GameOverViewer(String model) {
+        super(model);
+    }
+
+    @Override
+    public void drawElements(GUI gui) {
+        gui.drawText(new Position(5, 5), getModel(), "#FFFFFF");
+    }
+}
